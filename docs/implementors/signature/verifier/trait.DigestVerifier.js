(function() {var implementors = {};
implementors["ecdsa"] = [{"text":"impl&lt;C, D&gt; DigestVerifier&lt;D, Signature&lt;C&gt;&gt; for VerifyingKey&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Curve + ProjectiveArithmetic,<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Digest&lt;OutputSize = C::FieldSize&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;FieldBytes&lt;C&gt;: From&lt;Scalar&lt;C&gt;&gt; + for&lt;'r&gt; From&lt;&amp;'r Scalar&lt;C&gt;&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Scalar&lt;C&gt;: PrimeField&lt;Repr = FieldBytes&lt;C&gt;&gt; + FromDigest&lt;C&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;AffinePoint&lt;C&gt;: Copy + Clone + Debug + VerifyPrimitive&lt;C&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;SignatureSize&lt;C&gt;: ArrayLength&lt;u8&gt;,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["k256"] = [{"text":"impl&lt;D&gt; DigestVerifier&lt;D, Signature&lt;Secp256k1&gt;&gt; for VerifyingKey <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Digest&lt;OutputSize = U32&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;D&gt; DigestVerifier&lt;D, Signature&gt; for VerifyingKey <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Digest&lt;OutputSize = U32&gt;,&nbsp;</span>","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()
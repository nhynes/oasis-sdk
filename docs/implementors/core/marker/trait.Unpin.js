(function() {var implementors = {};
implementors["oasis_runtime_sdk"] = [{"text":"impl&lt;'a&gt; Unpin for DispatchContext&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; Unpin for TxContext&lt;'a, 'b&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'a: 'b,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Mode","synthetic":true,"types":[]},{"text":"impl Unpin for Signature","synthetic":true,"types":[]},{"text":"impl Unpin for PublicKey","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for PublicKey","synthetic":true,"types":[]},{"text":"impl Unpin for PublicKey","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for Dispatcher&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for CallableMethodInfo","synthetic":true,"types":[]},{"text":"impl Unpin for QueryMethodInfo","synthetic":true,"types":[]},{"text":"impl Unpin for MethodRegistry","synthetic":true,"types":[]},{"text":"impl Unpin for Parameters","synthetic":true,"types":[]},{"text":"impl Unpin for Genesis","synthetic":true,"types":[]},{"text":"impl Unpin for Module","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for Transfer","synthetic":true,"types":[]},{"text":"impl Unpin for Account","synthetic":true,"types":[]},{"text":"impl Unpin for NonceQuery","synthetic":true,"types":[]},{"text":"impl Unpin for BalancesQuery","synthetic":true,"types":[]},{"text":"impl Unpin for AccountBalances","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Metadata","synthetic":true,"types":[]},{"text":"impl&lt;M&gt; Unpin for MKVSStore&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for OverlayStore&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'store, S&gt; Unpin for PrefixStore&lt;'store, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for TypedStore&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Mock","synthetic":true,"types":[]},{"text":"impl Unpin for Address","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Denomination","synthetic":true,"types":[]},{"text":"impl Unpin for BaseUnits","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for UnverifiedTransaction","synthetic":true,"types":[]},{"text":"impl Unpin for Transaction","synthetic":true,"types":[]},{"text":"impl Unpin for Call","synthetic":true,"types":[]},{"text":"impl Unpin for AuthInfo","synthetic":true,"types":[]},{"text":"impl Unpin for Fee","synthetic":true,"types":[]},{"text":"impl Unpin for SignerInfo","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for CallResult","synthetic":true,"types":[]}];
implementors["test_runtime_simple_keyvalue"] = [{"text":"impl Unpin for Runtime","synthetic":true,"types":[]},{"text":"impl Unpin for Parameters","synthetic":true,"types":[]},{"text":"impl Unpin for Genesis","synthetic":true,"types":[]},{"text":"impl Unpin for Module","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for Key","synthetic":true,"types":[]},{"text":"impl Unpin for KeyValue","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()
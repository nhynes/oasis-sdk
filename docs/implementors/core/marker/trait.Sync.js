(function() {var implementors = {};
implementors["oasis_runtime_sdk"] = [{"text":"impl&lt;'a&gt; !Sync for DispatchContext&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; !Sync for TxContext&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for Mode","synthetic":true,"types":[]},{"text":"impl Sync for Signature","synthetic":true,"types":[]},{"text":"impl Sync for PublicKey","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for PublicKey","synthetic":true,"types":[]},{"text":"impl Sync for PublicKey","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for Dispatcher&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for CallableMethodInfo","synthetic":true,"types":[]},{"text":"impl Sync for QueryMethodInfo","synthetic":true,"types":[]},{"text":"impl Sync for MethodRegistry","synthetic":true,"types":[]},{"text":"impl Sync for Parameters","synthetic":true,"types":[]},{"text":"impl Sync for Genesis","synthetic":true,"types":[]},{"text":"impl Sync for Module","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for Transfer","synthetic":true,"types":[]},{"text":"impl Sync for Account","synthetic":true,"types":[]},{"text":"impl Sync for NonceQuery","synthetic":true,"types":[]},{"text":"impl Sync for BalancesQuery","synthetic":true,"types":[]},{"text":"impl Sync for AccountBalances","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for Metadata","synthetic":true,"types":[]},{"text":"impl&lt;M&gt; Sync for MKVSStore&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Sync for OverlayStore&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'store, S&gt; Sync for PrefixStore&lt;'store, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Sync for TypedStore&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !Sync for Mock","synthetic":true,"types":[]},{"text":"impl Sync for Address","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for Denomination","synthetic":true,"types":[]},{"text":"impl Sync for BaseUnits","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for UnverifiedTransaction","synthetic":true,"types":[]},{"text":"impl Sync for Transaction","synthetic":true,"types":[]},{"text":"impl Sync for Call","synthetic":true,"types":[]},{"text":"impl Sync for AuthInfo","synthetic":true,"types":[]},{"text":"impl Sync for Fee","synthetic":true,"types":[]},{"text":"impl Sync for SignerInfo","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for CallResult","synthetic":true,"types":[]}];
implementors["test_runtime_simple_keyvalue"] = [{"text":"impl Sync for Runtime","synthetic":true,"types":[]},{"text":"impl Sync for Parameters","synthetic":true,"types":[]},{"text":"impl Sync for Genesis","synthetic":true,"types":[]},{"text":"impl Sync for Module","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for Key","synthetic":true,"types":[]},{"text":"impl Sync for KeyValue","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()
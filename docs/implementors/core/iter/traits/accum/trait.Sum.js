(function() {var implementors = {};
implementors["bitvec"] = [{"text":"impl&lt;M&gt; Sum&lt;BitSel&lt;M&gt;&gt; for BitMask&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: BitMemory,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["curve25519_dalek"] = [{"text":"impl&lt;T&gt; Sum&lt;T&gt; for Scalar <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Borrow&lt;Scalar&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Sum&lt;T&gt; for EdwardsPoint <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Borrow&lt;EdwardsPoint&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Sum&lt;T&gt; for RistrettoPoint <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Borrow&lt;RistrettoPoint&gt;,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["k256"] = [{"text":"impl Sum&lt;ProjectivePoint&gt; for ProjectivePoint","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Sum&lt;&amp;'a ProjectivePoint&gt; for ProjectivePoint","synthetic":false,"types":[]}];
implementors["num_bigint"] = [{"text":"impl&lt;T&gt; Sum&lt;T&gt; for BigInt <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;BigInt: Add&lt;T, Output = BigInt&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Sum&lt;T&gt; for BigUint <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;BigUint: Add&lt;T, Output = BigUint&gt;,&nbsp;</span>","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()
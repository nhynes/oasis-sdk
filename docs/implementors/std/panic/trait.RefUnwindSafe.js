(function() {var implementors = {};
implementors["oasis_runtime_sdk"] = [{"text":"impl&lt;'a&gt; !RefUnwindSafe for DispatchContext&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; !RefUnwindSafe for TxContext&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Mode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Signature","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PublicKey","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PublicKey","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PublicKey","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for Dispatcher&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CallableMethodInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueryMethodInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MethodRegistry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Parameters","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Genesis","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Module","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Transfer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Account","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NonceQuery","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BalancesQuery","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccountBalances","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Metadata","synthetic":true,"types":[]},{"text":"impl&lt;M&gt; !RefUnwindSafe for MKVSStore&lt;M&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; RefUnwindSafe for OverlayStore&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'store, S&gt; RefUnwindSafe for PrefixStore&lt;'store, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; RefUnwindSafe for TypedStore&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Mock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Address","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Denomination","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BaseUnits","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnverifiedTransaction","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Transaction","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Call","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AuthInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Fee","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SignerInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CallResult","synthetic":true,"types":[]}];
implementors["test_runtime_simple_keyvalue"] = [{"text":"impl RefUnwindSafe for Runtime","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Parameters","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Genesis","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Module","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Key","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KeyValue","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()